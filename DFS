#include <bits/stdc++.h>
using namespace std;
void add_edge(vector<int>g[],int u,int v)
{
    g[u].push_back(v);
    g[v].push_back(u);
}
 
void dfs(vector<int>g[],int node,int source)
{
   stack<int>s; 
   bool visited[node];
   memset(visited,false,sizeof(visited));
   visited[source]=true;
   s.push(source);
   while(!s.empty())
   {
       int top=s.top();
       cout<<top;
       s.pop();
       for(auto x: g[top])
       {
           if(!visited[x])
           {
               s.push(x);
               visited[x]=true;
           }
       }
   }
}    

int main() {
	int node;
	cin>>node;
	vector<int> g[node];
	int edge;
	cin>>edge;
	for(int i=1;i<=edge;i++)
	{
	    int u,v;
	    cin>>u>>v;
	    add_edge(g,u,v);
	}
	dfs(g,node,0);
	return 0;
}
